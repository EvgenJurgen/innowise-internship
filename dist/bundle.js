(()=>{"use strict";const o=o=>t=>o+t;(o=>{const t=[[1,2,3],[4,5,6],[7,8,9]].map((o=>o.reduce(((o,t)=>o+t))/o.length)).reduce(((o,t)=>o+t)),e=Math.floor(t);console.log("sumAverage result: ",e)})(),(o=>{o.sort(((o,t)=>t-o));const t=[];for(const e of o)for(;t.length<3&&!t.includes(e);)t.push(e);console.log("maxTripletSum result: ",t)})([1,2,3,5,1,9,6,9]),(o=>{const t=[3,30,34,5,9].sort(((o,t)=>((o,t)=>parseInt(o.toString()+t.toString())>parseInt(t.toString()+o.toString())?-1:1)(o,t)));console.log("biggest result: ",t.join(""))})(),(o=>{const t=((o,t)=>{const e=[];for(let o=1;o<=3;o++)e.push(o);return e})(),e=[];let l=0;for(;l<t.length;)e.push(t.join("")),t.push(t.shift()),l++;console.log("pattern result: ",e)})(),console.log("arithmeticSequenceSum result: ",40),(o=>{const t=[[3,2,1],[4,6,5],[],[9,7,8]].flat().sort(((o,t)=>o-t));console.log("flattenAndSort result: ",t)})();const t=o(1);console.log("function add(1+3) result: ",t(3));const e=o(3);var l;console.log("function add(3+3) result: ",e(3)),console.log("multiplyAll result: ",(l=[1,2,3],o=>l.map((t=>t*o)))(2)),console.log("uniqueSum",(o=>{if(0===o.length)return 0;const t=o.sort(((o,t)=>o-t));let e=t[0],l=t[0];for(let o=0;o<t.length;o++)e!==t[o]&&(l+=t[o],e=t[o]);return l})([-1,-1,5,2,-7])),console.log("reduce result: ",((o,t,e)=>{e||(e=o[0],o.shift());for(const t of o)e=e*t;return e})([1,2,3,4],0,1))})();